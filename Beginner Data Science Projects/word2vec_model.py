# -*- coding: utf-8 -*-
"""word2vec_model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14JNglSPXRDtxD2jce9EYwXeBEcbN-yN_
"""

# imports
import pandas as pd
from gensim.utils import simple_preprocess
from gensim.models import Word2Vec

# loading data
df = pd.read_csv('/content/fake_real_news_dataset.csv')
df.head()

# getting info of dataset
df.info()

# looking at text
df['text'][0]

# proprocessing text; lower case, tokenization
df['text'] = df['text'].apply(simple_preprocess)
df.head()

# model initialization; CBOW
model = Word2Vec(window=10, sg=0, vector_size=50, seed=42)

# building vocab
model.build_vocab(corpus_iterable=df['text'])

# model training
model.train(corpus_iterable=df['text'], total_examples=model.corpus_count, epochs=10)

"""#### Another way to build vocab, and train the model:
``` 
model = Word2Vec(sentences=df['text'], epochs=10, window=10, sg=0, vector_size=50, seed=42)
```
"""

# checking similarity between words
model.wv.similarity('snake', 'cat')

# checking cosine distance between words
model.wv.distance('snake', 'cat')

# finding odd one out
model.wv.doesnt_match(['snake', 'cat', 'dog'])

# saving model
model.save('MyW2V.model')

# loading model
loaded_model = Word2Vec.load('MyW2V.model')

# rechecking similarity between words
loaded_model.wv.similarity('snake', 'cat')